import "strings"
import "types"

_modules = {
	"root": {
		"data": {
			"google_project": {
				"project": {
					"config":       {},
					"provisioners": null,
					"references":   {},
				},
			},
		},
		"modules": {},
		"outputs": {},
		"providers": {
			"google": {
				"alias": {
					"": {
						"config": {
							"project": "hc-7d2b1bb11c4f43dea1787d05735",
							"region":  "us-central1",
						},
						"references": {
							"project": [],
							"region":  [],
						},
						"version": "6.0.1",
					},
				},
				"config": {
					"project": "hc-7d2b1bb11c4f43dea1787d05735",
					"region":  "us-central1",
				},
				"references": {
					"project": [],
					"region":  [],
				},
				"version": "6.0.1",
			},
		},
		"resources": {
			"google_artifact_registry_repository": {
				"test": {
					"config": {
						"description":   "example docker repository with cmek",
						"format":        "DOCKER",
						"repository_id": "my-repository",
					},
					"provisioners": null,
					"references": {
						"description": [],
						"format":      [],
						"kms_key_name": [
							"google_kms_crypto_key.crypto_key.id",
							"google_kms_crypto_key.crypto_key",
						],
						"repository_id": [],
					},
				},
			},
			"google_kms_crypto_key": {
				"crypto_key": {
					"config": {
						"name": "crypto-key-example",
					},
					"provisioners": null,
					"references": {
						"key_ring": [
							"google_kms_key_ring.key_ring.id",
							"google_kms_key_ring.key_ring",
						],
						"name": [],
					},
				},
			},
			"google_kms_crypto_key_iam_member": {
				"crypto_key": {
					"config": {
						"role": "roles/cloudkms.cryptoKeyEncrypterDecrypter",
					},
					"provisioners": null,
					"references": {
						"crypto_key_id": [
							"google_kms_crypto_key.crypto_key.id",
							"google_kms_crypto_key.crypto_key",
						],
						"member": [
							"data.google_project.project.number",
							"data.google_project.project",
						],
						"role": [],
					},
				},
			},
			"google_kms_key_ring": {
				"key_ring": {
					"config": {
						"location": "us-central1",
						"name":     "keyring-example",
					},
					"provisioners": null,
					"references": {
						"location": [],
						"name":     [],
					},
				},
			},
		},
		"variables": {},
	},
}

module_paths = [
	[],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
