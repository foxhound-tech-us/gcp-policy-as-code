import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"google_artifact_registry_repository": {
				"test": {
					0: {
						"applied": {
							"cleanup_policies":       [],
							"cleanup_policy_dry_run": null,
							"description":            "example docker repository with cmek",
							"docker_config":          [],
							"effective_labels": {
								"goog-terraform-provisioned": "true",
							},
							"format":                   "DOCKER",
							"kms_key_name":             "projects/hc-7d2b1bb11c4f43dea1787d05735/locations/us-central1/keyRings/keyring-example/cryptoKeys/crypto-key-example",
							"labels":                   null,
							"maven_config":             [],
							"mode":                     "STANDARD_REPOSITORY",
							"project":                  "hc-7d2b1bb11c4f43dea1787d05735",
							"remote_repository_config": [],
							"repository_id":            "my-repository",
							"terraform_labels": {
								"goog-terraform-provisioned": "true",
							},
							"timeouts":                  null,
							"virtual_repository_config": [],
						},
						"destroy": false,
						"diff": {
							"cleanup_policies.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"cleanup_policy_dry_run": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"create_time": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"description": {
								"computed": false,
								"new":      "example docker repository with cmek",
								"old":      "",
							},
							"docker_config.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"effective_labels.%": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"effective_labels.goog-terraform-provisioned": {
								"computed": false,
								"new":      "true",
								"old":      "",
							},
							"format": {
								"computed": false,
								"new":      "DOCKER",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"kms_key_name": {
								"computed": false,
								"new":      "projects/hc-7d2b1bb11c4f43dea1787d05735/locations/us-central1/keyRings/keyring-example/cryptoKeys/crypto-key-example",
								"old":      "",
							},
							"labels": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"location": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"maven_config.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"mode": {
								"computed": false,
								"new":      "STANDARD_REPOSITORY",
								"old":      "",
							},
							"name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"project": {
								"computed": false,
								"new":      "hc-7d2b1bb11c4f43dea1787d05735",
								"old":      "",
							},
							"remote_repository_config.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"repository_id": {
								"computed": false,
								"new":      "my-repository",
								"old":      "",
							},
							"terraform_labels.%": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"terraform_labels.goog-terraform-provisioned": {
								"computed": false,
								"new":      "true",
								"old":      "",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"update_time": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"virtual_repository_config.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"google_kms_crypto_key_iam_member": {
				"crypto_key": {
					0: {
						"applied": {
							"condition":     [],
							"crypto_key_id": "projects/hc-7d2b1bb11c4f43dea1787d05735/locations/us-central1/keyRings/keyring-example/cryptoKeys/crypto-key-example",
							"member":        "serviceAccount:service-1059522574692@gcp-sa-artifactregistry.iam.gserviceaccount.com",
							"role":          "roles/cloudkms.cryptoKeyEncrypterDecrypter",
						},
						"destroy": false,
						"diff": {
							"condition.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"crypto_key_id": {
								"computed": false,
								"new":      "projects/hc-7d2b1bb11c4f43dea1787d05735/locations/us-central1/keyRings/keyring-example/cryptoKeys/crypto-key-example",
								"old":      "",
							},
							"etag": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"member": {
								"computed": false,
								"new":      "serviceAccount:service-1059522574692@gcp-sa-artifactregistry.iam.gserviceaccount.com",
								"old":      "",
							},
							"role": {
								"computed": false,
								"new":      "roles/cloudkms.cryptoKeyEncrypterDecrypter",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "1.9.5"

variables = {}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
